// --------------------------------------------------------
// Code generated by Papyrus Java
// --------------------------------------------------------

package Session;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStream;
import java.net.HttpURLConnection;
import java.net.MalformedURLException;
import java.net.URL;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.time.LocalDate;
import java.time.LocalTime;
import java.util.ArrayList;
import java.util.List;

import org.json.JSONArray;

/************************************************************/
/**
 * 
 */
public class Creneau extends SqlUtils {
	/**
	 * 
	 */
	private String id;
	/**
	 * 
	 */
	private LocalTime debut;
	/**
	 * 
	 */
	private LocalTime fin;
	/**
	 * 
	 */
	private LocalDate jour;
	/**
	 * 
	 */
	public Classe classe;
	public UniteEnseignement uniteEnseignement;

	/**
	 * 
	 * @param id
	 * @param debut
	 * @param fin
	 * @param jour
	 */
	public Creneau(String id, LocalTime debut, LocalTime fin, LocalDate jour) {
		this.id = id;
		this.debut = debut;
		this.fin = fin;
		this.jour = jour;
	}

	public void save() {
		this.connect();
		this.requestUpdate(String.format("INSERT INTO CRENEAU VALUES('%s','%s','%s','%s','%s','%s')", this.id,
				this.debut.toString(), this.fin.toString(), this.jour.toString(),
				this.classe == null ? "" : this.classe.getId(),
				this.uniteEnseignement == null ? "" : this.uniteEnseignement.getId()));
		this.disconnect();
		URL url;
		try {
			url = new URL ("http://e0aa4a44.ngrok.io/manipulCreneau/create/newcreneau/");
			HttpURLConnection con;
			try {
				con = (HttpURLConnection)url.openConnection();
				con.setRequestMethod("POST");
				con.setRequestProperty("Content-Type", "application/json; utf-8");
				con.setRequestProperty("Accept", "application/json");
				con.setDoOutput(true);
				String jsonInputString = "{ \"id\" : \""+id+"\", \"debut\" : \""+debut+"\", \"fin\" : \""+fin+"\", \"jour\" : \""+jour+"\"}";
				try(OutputStream os = con.getOutputStream()) {
				    byte[] input = jsonInputString.getBytes("utf-8");
				    os.write(input, 0, input.length);           
				}
				try(BufferedReader br = new BufferedReader(
						  new InputStreamReader(con.getInputStream(), "utf-8"))) {
						    StringBuilder response = new StringBuilder();
						    String responseLine = null;
						    while ((responseLine = br.readLine()) != null) {
						        response.append(responseLine.trim());
						    }
						    System.out.println(response.toString());
						}
			} catch (IOException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
			
		} catch (MalformedURLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}

	public String getId() {
		return id;
	}

	public void setId(String id) {
		this.id = id;
	}

	public LocalTime getDebut() {
		return debut;
	}

	public void setDebut(LocalTime debut) {
		this.debut = debut;
	}

	public LocalTime getFin() {
		return fin;
	}

	public void setFin(LocalTime fin) {
		this.fin = fin;
	}

	public LocalDate getJour() {
		return jour;
	}

	public void setJour(LocalDate jour) {
		this.jour = jour;
	}

	public Classe getClasse() {
		return classe;
	}

	public void setClasse(Classe classe) {
		this.classe = classe;
	}

	public UniteEnseignement getUniteEnseignement() {
		return uniteEnseignement;
	}

	public void setUniteEnseignement(UniteEnseignement uniteEnseignement) {
		this.uniteEnseignement = uniteEnseignement;
	}

	public void update() {
		this.connect();
		this.requestUpdate(String.format(
				"UPDATE CRENEAU SET debut='%s',fin='%s',jour='%s',classe='%s',uniteEnseignement='%s' WHERE id='%s'",
				this.id, this.debut.toString(), this.fin.toString(), this.jour.toString(),
				this.classe == null ? "" : this.classe.getId(),
				this.uniteEnseignement == null ? "" : this.uniteEnseignement.getId(), this.id));
		this.disconnect();
	}

	public void delete() {
		this.connect();
		this.requestUpdate(String.format("DELETE FROM CRENEAU WHERE id='%s'", this.id));
		this.disconnect();
		URL url;
		try {
			url = new URL ("http://e0aa4a44.ngrok.io/manipulCreneau/delete/deletecreneau/");
			HttpURLConnection con;
			try {
				con = (HttpURLConnection)url.openConnection();
				con.setRequestMethod("DELETE");
				con.setRequestProperty("Content-Type", "application/json; utf-8");
				con.setRequestProperty("Accept", "application/json");
				con.setDoOutput(true);
				String jsonInputString = "{ \"UUID\" : \""+id+"\"}";
				try(OutputStream os = con.getOutputStream()) {
				    byte[] input = jsonInputString.getBytes("utf-8");
				    os.write(input, 0, input.length);           
				}
				try(BufferedReader br = new BufferedReader(
						  new InputStreamReader(con.getInputStream(), "utf-8"))) {
						    StringBuilder response = new StringBuilder();
						    String responseLine = null;
						    while ((responseLine = br.readLine()) != null) {
						        response.append(responseLine.trim());
						    }
						    System.out.println(response.toString());
						}
			} catch (IOException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
			
		} catch (MalformedURLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}

	}

	public static Creneau getById(String id) {
		URL url;
		try {
			url = new URL ("http://e0aa4a44.ngrok.io/manipulCreneau/get/getCreneau");
			HttpURLConnection con;
			try {
				con = (HttpURLConnection)url.openConnection();
				con.setRequestMethod("GET");
				con.setRequestProperty("Content-Type", "application/json; utf-8");
				con.setRequestProperty("Accept", "application/json");

				StringBuilder response = new StringBuilder();
				
				try(BufferedReader br = new BufferedReader(
						  new InputStreamReader(con.getInputStream(), "utf-8"))) {
						    
						    String responseLine = null;
						    while ((responseLine = br.readLine()) != null) {
						        response.append(responseLine.trim());
						    }
						}
				JSONArray obj = new JSONArray(response.toString());
				
				for (int i = 0; i < obj.length(); ++i) {
					if(obj.getJSONObject(i).getString("id").equals(id)) {
					Creneau creneau = new Creneau(obj.getJSONObject(i).getString("id"), LocalTime.parse(obj.getJSONObject(i).getString("debut")),
							LocalTime.parse(obj.getJSONObject(i).getString("fin")), LocalDate.parse(obj.getJSONObject(i).getString("jour")));
					
					return creneau;
					}
				}
			} catch (IOException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
			
		} catch (MalformedURLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
			return null;
		
	}

	public static List<Creneau> getAll() {
		
		List<Creneau> result = new ArrayList<Creneau>();

		URL url;
		try {
			url = new URL ("http://e0aa4a44.ngrok.io/manipulCreneau/get/getCreneau");
			HttpURLConnection con;
			try {
				con = (HttpURLConnection)url.openConnection();
				con.setRequestMethod("GET");
				con.setRequestProperty("Content-Type", "application/json; utf-8");
				con.setRequestProperty("Accept", "application/json");

				StringBuilder response = new StringBuilder();
				
				try(BufferedReader br = new BufferedReader(
						  new InputStreamReader(con.getInputStream(), "utf-8"))) {
						    
						    String responseLine = null;
						    while ((responseLine = br.readLine()) != null) {
						        response.append(responseLine.trim());
						    }
						}
				JSONArray obj = new JSONArray(response.toString());
				
				for (int i = 0; i < obj.length(); ++i) {
					Creneau creneau = new Creneau(obj.getJSONObject(i).getString("id"), LocalTime.parse(obj.getJSONObject(i).getString("debut")),
							LocalTime.parse(obj.getJSONObject(i).getString("fin")), LocalDate.parse(obj.getJSONObject(i).getString("jour")));
					result.add(creneau);
					
				}
			} catch (IOException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
			
		} catch (MalformedURLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		return result;
	}

	@Override
	public String toString() {
		return "" + id + " ; " + debut + " ; " + fin + " ; " + jour + "\n";
	}
	
};
