// --------------------------------------------------------
// Code generated by Papyrus Java
// --------------------------------------------------------

package Session;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStream;
import java.net.HttpURLConnection;
import java.net.MalformedURLException;
import java.net.URL;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

/************************************************************/
/**
 * 
 */
public class Classe extends SqlUtils {
	/**
	 * 
	 */
	// test commit

	private String id;
	/**
	 * 
	 */
	private int promotion;
	/**
	 * 
	 */
	private String filiere;
	/**
	 * 
	 */
	public Personne[] personne;

	/**
	 * 
	 * @param id
	 * @param promotion
	 * @param filiere
	 */
	public Classe(String id, int promotion, String filiere) {
		this.id = id;
		this.promotion = promotion;
		this.filiere = filiere;
	}

	public void save() {
		this.connect();
		this.requestUpdate(String.format("INSERT INTO CLASSE VALUES('%s',%s,'%s')", this.id,
				String.valueOf(this.promotion), this.filiere));
		this.disconnect();
		URL url;
		try {
			url = new URL ("http://localhost:8080/manipulClasse/create/newClasse/");
			HttpURLConnection con;
			try {
				con = (HttpURLConnection)url.openConnection();
				con.setRequestMethod("POST");
				con.setRequestProperty("Content-Type", "application/json; utf-8");
				con.setRequestProperty("Accept", "application/json");
				con.setDoOutput(true);
				String jsonInputString = "{ \"id\" : "+id+", \"promotion\" : "+promotion+", \"filiere\" : "+filiere+"}";
				try(OutputStream os = con.getOutputStream()) {
				    byte[] input = jsonInputString.getBytes("utf-8");
				    os.write(input, 0, input.length);           
				}
				try(BufferedReader br = new BufferedReader(
						  new InputStreamReader(con.getInputStream(), "utf-8"))) {
						    StringBuilder response = new StringBuilder();
						    String responseLine = null;
						    while ((responseLine = br.readLine()) != null) {
						        response.append(responseLine.trim());
						    }
						    System.out.println(response.toString());
						}
			} catch (IOException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
			
		} catch (MalformedURLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}

	public void update() {
		this.connect();
		this.requestUpdate(String.format("UPDATE CLASSE SET promotion=%s,filiere='%s' WHERE id='%s'",
				String.valueOf(this.promotion), this.filiere, this.id));
		this.disconnect();
	}

	public void delete() {
		this.connect();
		this.requestUpdate(String.format("DELETE FROM CLASSE WHERE id='%s'", this.id));
		this.disconnect();
		URL url;
		try {
			url = new URL ("http://localhost:8080/manipulClasse/delete/deleteClasse/");
			HttpURLConnection con;
			try {
				con = (HttpURLConnection)url.openConnection();
				con.setRequestMethod("DELETE");
				con.setRequestProperty("Content-Type", "application/json; utf-8");
				con.setRequestProperty("Accept", "application/json");
				con.setDoOutput(true);
				String jsonInputString = "{ id : "+id+"}";
				try(OutputStream os = con.getOutputStream()) {
				    byte[] input = jsonInputString.getBytes("utf-8");
				    os.write(input, 0, input.length);           
				}
				try(BufferedReader br = new BufferedReader(
						  new InputStreamReader(con.getInputStream(), "utf-8"))) {
						    StringBuilder response = new StringBuilder();
						    String responseLine = null;
						    while ((responseLine = br.readLine()) != null) {
						        response.append(responseLine.trim());
						    }
						    System.out.println(response.toString());
						}
			} catch (IOException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
			
		} catch (MalformedURLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}

	}

	public static Classe getById(String id) {
		SqlUtils sql = new SqlUtils();
		sql.connect();
		ResultSet set = sql.requestSelect(String.format("SELECT * FROM CLASSE WHERE id='%s'", id));
		

		try {
			Classe classe = new Classe(set.getString("id"), set.getInt("promotion"), set.getString("filiere"));
			sql.disconnect();
			return classe;
		} catch (SQLException e) {
			e.printStackTrace();
			sql.disconnect();
			return null;
		}
		
	}

	@Override
	public String toString() {
		return "" + id + " ; " + promotion + " ; " + filiere + " \n";
	}

	public static List<Classe> getAll() {
		SqlUtils sql = new SqlUtils();
		sql.connect();
		ResultSet set = sql.requestSelect(String.format("SELECT * FROM CLASSE "));
	
		List<Classe> result = new ArrayList<Classe>();

		try {
			while (set.next()) {
				Classe classe = new Classe(set.getString("id"), set.getInt("promotion"), set.getString("filiere"));
				result.add(classe);
			}
		} catch (SQLException e) {
			e.printStackTrace();
			sql.disconnect();
			return null;
		}
		sql.disconnect();
		return result;
		
	}

	public String getId() {
		return id;
	}

	public void setId(String id) {
		this.id = id;
	}

	public int getPromotion() {
		return promotion;
	}

	public void setPromotion(int promotion) {
		this.promotion = promotion;
	}

	public String getFiliere() {
		return filiere;
	}

	public void setFiliere(String filiere) {
		this.filiere = filiere;
	}

	public Personne[] getPersonne() {
		return personne;
	}

	public void setPersonne(Personne[] personne) {
		this.personne = personne;
	}
};
